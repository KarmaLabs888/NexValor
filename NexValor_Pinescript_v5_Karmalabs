//@version=5
strategy("Nex Valor - by Karmalabs", overlay=true)

// Input parameters
fastLength = input.int(12, "MACD Fast Length")
slowLength = input.int(26, "MACD Slow Length")
signalLength = input.int(9, "MACD Signal Length")
rsiLength = input.int(14, "RSI Length")
atrLength = input.int(14, "ATR Length")
superTrendATRLen = input.int(10, "SuperTrend ATR Length")
superTrendFactor = input.float(3, "SuperTrend Factor")
training_data_period = input.int(100, "Training Data Length")

// Text box for RSI levels
rsiOversold = input.int(30, "RSI Oversold Level")
rsiOverbought = input.int(70, "RSI Overbought Level")

// Calculate indicators
sma50 = ta.sma(close, 50)
sma200 = ta.sma(close, 200)
rsi = ta.rsi(close, rsiLength)
[macdLine, signalLine, _] = ta.macd(close, fastLength, slowLength, signalLength)
atrValue = ta.atr(atrLength)

// SuperTrend Calculation
pine_supertrend(float factor, float atr) =>
    float src = hl2
    float upperBand = src + factor * atr
    float lowerBand = src - factor * atr
    float prevLowerBand = na(lowerBand[1]) ? lowerBand : lowerBand[1]
    float prevUpperBand = na(upperBand[1]) ? upperBand : upperBand[1]

    lowerBand := na(prevLowerBand) ? lowerBand : lowerBand > prevLowerBand or close[1] < prevLowerBand ? lowerBand : prevLowerBand
    upperBand := na(prevUpperBand) ? upperBand : upperBand < prevUpperBand or close[1] > prevUpperBand ? upperBand : prevUpperBand

    int _direction = na
    float superTrend = na
    float prevSuperTrend = na(superTrend[1]) ? superTrend : superTrend[1]

    if na(atr[1])
        _direction := 1
    else if prevSuperTrend == prevUpperBand
        _direction := close > upperBand ? -1 : 1
    else
        _direction := close < lowerBand ? 1 : -1

    superTrend := _direction == -1 ? lowerBand : upperBand
    [superTrend, _direction]

// Apply the SuperTrend function
[ST, superTrendDir] = pine_supertrend(superTrendFactor, atrValue)

// Entry Conditions
longCondition = macdLine > signalLine and rsi < rsiOverbought and close > sma50 and sma50 > sma200 and superTrendDir == 1
shortCondition = macdLine < signalLine and rsi > rsiOversold and close < sma50 and sma50 < sma200 and superTrendDir == -1

// Exit Conditions
stopLoss = 2 * atrValue
takeProfit = 3 * atrValue

// Execute trades
if (longCondition)
    strategy.entry("Long", strategy.long)
    strategy.exit("Exit Long", "Long", stop=strategy.position_avg_price - stopLoss, limit=strategy.position_avg_price + takeProfit)

if (shortCondition)
    strategy.entry("Short", strategy.short)
    strategy.exit("Exit Short", "Short", stop=strategy.position_avg_price + stopLoss, limit=strategy.position_avg_price - takeProfit)

// Modify Candle Color Based on Signal
barcolor(longCondition ? color.new(color.green, 0) : shortCondition ? color.new(color.red, 0) : na)

// Plot indicators
plot(sma50, color=color.blue, title="50 SMA")
plot(sma200, color=color.red, title="200 SMA")
plot(ST, color=color.new(superTrendDir > 0 ? color.green : color.red, 0), title="SuperTrend")

// Plot RSI levels for visual clarity
hline(rsiOversold, "RSI Oversold", color=color.green)
hline(rsiOverbought, "RSI Overbought", color=color.red)
